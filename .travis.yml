# avoid double builds on pull requests
branches:
  only:
    master

matrix:
  include:
    - stage: Check JSON format
      before_install: npm install -g json-align
      script:
        - find . -name "*.json" -print0 | xargs -0 json-align -i
        - diffs=$(git diff --name-only | wc -l); if [ $diffs != 0 ]; then exit 1; fi
      after_failure:
        - echo "Some JSON files are not aligned. Please run json-align."
        - git diff --name-only

    - stage: Update translations
      before_install:
        - sudo apt-get -qq update
        - sudo apt-get install -y python-jsonschema python-pil gettext
      script:
        - python ./validate.py
      after_success:
        # push translation updates only for master (PR changes must be committed to master before they are taken into account)
        - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./i18n/push_translations.sh; fi

    # Update JSDoc
    - stage: Update JSDoc
      before_install: npm install -g jsdoc
      script:
        # push JSDoc updates only for master (PR changes must be committed to master before they are taken into account)
        - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./push_jsdoc.sh; fi

    # Check GitHub Pages
    - stage: Check GitHub Pages
      os: linux
      language: ruby
      rvm:
        - 2.5
      before_install: cd docs
      script:
        - bundle exec jekyll build
        - bundle exec htmlproofer ./_site --only-4xx --check-favicon --check-html --assume-extension --file-ignore=/jsdoc/

env:
  global:
    - secure: "JDMLMTU6GREzxLpe+WteZ1oQsoBKHFBjV55+KNiBYhvFlo7RXblRO1lR/wJwb1LHEk2ALzpuCiljhqQnIEN8vkk2rjDiAMds7b22ssqOMDYYJMb1s8ze5TMBFsea/vggXMJktHdOXTdnVJb2ueTcRgHnK/mRfiWe/NQT9uX2ROQund7/lg9fAFdPLeFUeZILH0LyQWBs8+sVBrXIyrFUKMIDHBafv0qxdRG4PV+eQXrTARoaheRP1M2knp7XOOY3fPcGFAJeyL+tYQXJn+cK9DQWh06vhVPKnDDdNX0JBAz7AnxFwOow8nbH1QYSnK3CwLhjtmMt2rZ8BNbNDgkYqS6mluDngTkN7cCoSvbyecUXw7J+PjDYxD4h/v0WaLn2zCwh7R4leBwh/RKRy0Gia3A/lYR+0zBLCqF3MoktpcnMQciX9K0Qol8LF/yFCaEtXqJeemztDY53mO8IFmKH0g7M6Q9oPc9+MYBXPm7td9oCse07SPxSXdtRvaA2VTvuPQboUgOatbMNTUsbjqjfCf0zyS77Ori+81KOAZVBHf+qLSlbTjEjNlm090Hm3H8i02yLKi91PvD/HiZ81PAj+Yh0sAkzGY+f5Gueql7rxLU24PSiUeCxlXIJ+BIGkWas8x7SMWbkgSTcORfq7/9HoIhrhTQVCeQUjKgxw+nkZHs="
